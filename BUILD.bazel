load("@rules_cc//cc:defs.bzl", "cc_binary")
load("//tools/project:build_defs.bzl", "project")

project(license = "gpl3-https")

AV_SRCS = [
    "src/audio*.c",
    "src/video*.c",
    "src/x11*.c",
]

cc_binary(
    name = "toxic",
    srcs = glob(
        [
            "src/*.c",
            "src/*.h",
        ],
        exclude = AV_SRCS,
    ) + select({
        "//tools/config:linux-x86_64": glob(AV_SRCS),
        "//conditions:default": [],
    }),
    copts = [
        "-D_DEFAULT_SOURCE",
        "-DGAMES",
        "-DHAVE_WIDECHAR",
        "-DPACKAGE_DATADIR='\"data\"'",
        "-DQRCODE",
        "-DTOX_EXPERIMENTAL",
    ] + select({
        "//tools/config:linux-x86_64": [
            "-DAUDIO",
            "-DVIDEO",
            "-DPYTHON",
        ],
        "//conditions:default": [],
    }),
    deps = [
        "//c-toxcore",
        "@curl",
        "@libconfig",
        "@libqrencode",
        "@ncurses",
    ] + select({
        "//tools/config:linux-x86_64": [
            "@libvpx",
            "@openal",
            "@python3//:python",
            "@x11",
        ],
        "//conditions:default": [],
    }),
)

sh_test(
    name = "toxic_test",
    size = "small",
    srcs = [":toxic"],
    args = ["--help"],
)
